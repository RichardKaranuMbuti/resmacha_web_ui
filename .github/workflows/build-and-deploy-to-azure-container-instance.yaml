name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - 'components/**'
      - 'pages/**'
      - 'app/**'
      - 'public/**'
      - 'styles/**'
      - 'next.config.js'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - '.github/workflows/build-frontend.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: resmatchaacr
  ACR_REGISTRY_URL: resmatchaacr.azurecr.io
  IMAGE_NAME: resmatcha-frontend
  RESOURCE_GROUP: rg-resmatcha-frontend
  APP_NAME: resmatcha-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to Azure using service principal credentials
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      # Step 4: Build and push Docker image to ACR
      - name: Build and Push Docker image to ACR
        run: |
          docker build -t ${{ env.ACR_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.ACR_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.ACR_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:latest

      # Step 5: Deploy to Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{ env.ACR_REGISTRY_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Step 6: Configure startup command for Next.js (optional)
      - name: Configure startup command
        run: |
          az webapp config set \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.APP_NAME }} \
            --startup-file "npm run start"

      # Step 7: Set environment variables
      - name: Configure App Settings
        run: |
          az webapp config appsettings set \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.APP_NAME }} \
            --settings \
              NODE_ENV=production \
              NEXT_TELEMETRY_DISABLED=1 \
              PORT=3000 \
              WEBSITES_PORT=3000 \
              NEXT_PUBLIC_API_URL="${{ secrets.NEXT_PUBLIC_API_URL || 'https://api.resmatcha.com' }}" \
              NEXT_PUBLIC_APP_NAME="ResMatcha" \
              NEXT_PUBLIC_ENVIRONMENT="${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}"

      # Step 8: Azure logout
      - name: Azure logout
        run: az logout
        if: always()